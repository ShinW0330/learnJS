/* COMMON  */
body{
  color: #333;
  font-size: 16px; /* 기본 글꼴 사이즈 body에 선언하여 최상위 적용 */
  font-weight: 400; /* 기본 굴기 설정 */
  line-height: 1.4; /* 라인 높이  */
  font-family: 'Nanum Gothic', sans-serif;
  height: 3000px;/* badge 확인을 위해 지정값을 주어 화면 스크롤 확인 */
}
img{ /* img 는 inline 요소 -> 위아래 값을 가질 수 없는 marggin 과 padding 값을 가질수 없다 . 인라인 요소는 baseline 이라 글자 아래에 작은 공간이 생기기 떄문에 조금 뜬다.  */
  display: block;
}
a {/* a 태그에 밑줄이 발생하는것을 방지 */
  text-decoration: none;
}
.inner { /* 모든 inner */
  width: 1100px;
  margin: 0 auto; /* 가운데 정렬 */
  position: relative; /* 위치상의 부모가 되는 기준 */
}


/* HEADER */
header {
  /* background-color: royalblue; */
  /* position: relative; badge 부모  -> fixed로 변경 (상단 메뉴가 고정되게 하기 위해)*/
  background-color: #f6f5f0;
  border-bottom :1px solid #c8c8c8;
  position: fixed; /* 브라우저 뷰 포트 기준으로 배치하겠다 */
  top: 0;
  /*width: auto;  position이 fixed 나 absolute 일경우 width 사용을 죄소한으로 하기 때문에 
  화면을 줄이거나 하면  정상적으로 출력이 되지 않는다. */
  width: 100%; /* 그렇기 때문에 최대한으로 설정.  */
}

header >.inner{ /* 모든 inner 높이가 아니라 헤더 안에 있는 자식 요소인 inner 부분만  */
  height: 120px;
  /* width: 1100px; 공통    */
  /* margin: 0 auto; 공통으로 뺌 */
  /* background-color: orange; */
  /* position: relative; 공통  */
}

header .logo{ /* 로고 높이 75px */
  height: 75px; /* margin auto 로 높이 설정.  */
  position: absolute; /* 구조적인 부모(inner )로 부터 위치 하겠다.  */
  top: 0;
  bottom: 0;
  left: 0; /* 확실히 하기 위해서 부모 구조로 부터 왼쪽 0를 주어 왼쪽에 위치 시킨다.  */
  margin: auto 0; /* 윗쪽 아래 여백을 브라우저 판단으로 계산 할당 -> 그래서 높이가 얼마 인지 알려줘야 한다.  */
   /* 잠시 사라지게  */
}

/* https://fonts.google.com/icons */

header .sub-menu{
  position: absolute;
  top: 10px;
  right: 0;
  display: flex;

}

header .sub-menu ul.menu{
  font-family: Arial, Helvetica, sans-serif;
  display: flex; /* menu 수직으로 쌓여있는 것을 수평으로 변경. */

}

header .sub-menu ul.menu li{
  position: relative;

}

/* 구분선 만들기  */
header .sub-menu ul.menu li::before{ /* 가상선택자  인라인 요소*/
  content: "";
  display: block; /* block 를 선언해서 가로 세로 사이즈를 할당할수 있도록 만든다.  */
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto ;
}
header .sub-menu ul.menu li:first-child::before{ /* 필요 없는 구분선 지우기  */
  display: none; 

}

header .sub-menu ul.menu li a{
  /* background-color: red; */ /* block 요소가 되면 최대한 범위내에서 잡아 주려고 하기 때문에 전체적으로 색으 빨간색 */
  font-size: 13px;
  padding: 11px 16px; /* a tag는 기본적으로 인라인 요소이고 사용자가 클릭시 불편하지 않게 여백을 더 주어서 클릭이 편하게 한다.   */
  display: block;/* 레이아웃을 잡아주기 위해 범위를 잡아 주기 위해서 인라인 요소 a 태그를 block 으로 선언 . */
  color: #656565;

}

header .sub-menu ul.menu li a:hover{
  color: #000000;
}

header .sub-menu .serach{
 /*  background-color: red; */
  height: 34px;
  position: relative;
}


header .sub-menu .serach input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline: none;
  background-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width .4s;
}
header .sub-menu .serach input:focus {
  width: 190px;
  border-color: #669900;

}

header .sub-menu .serach .material-icons{
  height: 24px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto;
  transition: all .4s;

}

header .sub-menu .serach.focused .material-icons{ /*  focused className 추가 됐을시 icon 완전 투명  */
  opacity: 0;
}

header .main-menu {
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1; /* 드롭 다운 된 메뉴가 다른 배너를 덮을수 있도록 하기 위해 */
  display: flex; /* 메뉴가 수직으로 쌓여 있는데 수평으로  */
}

/* header .main-menu .item{
  
} */

header .main-menu .item .item__name{
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}

header .main-menu .item:hover .item__name{ /* 아이템 네임에 hover 를 적용하는게 아니라 item 자체에 해줘야 한다. */
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0; /* 메뉴를 보면 윗 상단에만 레디우스가 적용 */
}

header .main-menu .item .item__contents{  
  width: 100%; /* 드롭다운 영역을 가로를 전부 지정 */
  position: fixed;
  left: 0;
  display: none; /* none 를 하면서 드롭다운 두층이 보이지 않게 된다.  */
}

header .main-menu .item:hover .item__contents{ 
  display: block; /* item 영역에 hover가 되는 순간 드롭다운 층이 나타나게 한다.  */
}


header .main-menu .item .item__contents .contents__menu{ /* 드롭다운시 첫번쨰 층 */
  background-color: #2c2a29;
  /* height: 200px;  지정한 값에서 삭제함으로써 높이가 li에따라 auto 처리*/ 
}

header .main-menu .item .item__contents .contents__menu > ul{  /* 첫번쨰 자식 선택자를 선택 하기 위해 > 를 사용한다.  */
  display: flex; /* ul 안하위 요소들이 수직에서 수평으로 되기 하기 위해  */
  padding: 20px 0;
}

header .main-menu .item .item__contents .contents__menu > ul > li{  /* 첫번쨰 자식 선택자를 선택 하기 위해 > 를 사용한다.  */
  width: 220px; /* ul 안 li 간격이 220px */
}

header .main-menu .item .item__contents .contents__menu > ul > li h4{  /* 첫번쨰 자식 선택자를 선택 하기 위해 > 를 사용한다.  */
  padding: 3px 0 12px 0 ;  /* h4 padding 값을 주어서 하위 li 메뉴이름과 간격을 둔다.  */
  font-size: 14px;
  color: #fff;
}

header .main-menu .item .item__contents .contents__menu > ul > li ul li{  /* 첫번쨰 자식 선택자를 선택 하기 위해 > 를 사용한다.  */
  padding: 5px 0 ; /* 가장 하위에 있는 메뉴들의 간격 */
  font-size: 12px;
  color: #999 ;
  cursor: pointer;
}

header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover{
  color: #669900;
}

header .main-menu .item .item__contents .contents__texture{ /* 드롭다운시 두번쨰 층 */
  padding: 26px 0;
  font-size: 12px;/* font 속성은 기본적으로 상속이 된다. */
  background-image: url("../images/main_menu_pattern.jpg"); /* 반복적으로 이미지가 출력  */
}
header .main-menu .item .item__contents .contents__texture h4{ /* 드롭다운시 두번쨰 층 */
  color: #999;
  font-weight: 700;
  /* font-size: 12px; */
}
header .main-menu .item .item__contents .contents__texture p{ /* 드롭다운시 두번쨰 층 */
  color: #669900;
  margin: 4px 0 14px;
  /* font-size: 12px; texture  공통 부분이기에   */
}

header .badges{
  position: absolute;
  top: 132px;
  right: 12px;
}

header .badges .badge {
  border-radius: 10px;
  overflow: hidden; /* radius를 사용해서 틀을 깍아 내도 img 떄문에 각지게 나오는데
  img 가 넘치지 않도록  */
  margin-bottom:12px ; /* 이미지 사이의 간격 */
  box-shadow: 4px 4px 10px rgb(0, 0, 0, .15); /* 그림자 */
  cursor: pointer ;

}

/* VISUAL */
.visual {
  margin-top: 120px;/* 헤더안의 inner 높이 값과 같다.  */
  background-image: url(../images/visual_bg.jpg);
  background-position: center;
}

.visual .inner{
  height: 646px; /* bg img의 높이 값  */
  /* common .inner 선언부분도 적용이 된다.  */
  background-color: orange;
}

.visual .title{
  
}
.visual .title .btn{
  
}
.visual .cup1 .image{
  
}
.visual .cup1 .text{
  
}


.visual .cup2 .image{
  
}

.visual .cup2 .text{
  
}

.visual .spoon{
  
}

